{"version":3,"sources":["components/Profile/StatsList.module.css","components/Profile/Profile.module.css","components/FriendList/FriendListItem.module.css","components/Statistics/StatListItem.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Profile/Stats.js","components/Profile/Profile.js","components/Statistics/StatListItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionTr.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Stats","followers","views","likes","className","s","statsList","statsItem","label","quantity","Profile","name","tag","location","avatar","stats","profile","description","src","alt","randomColor","random","Math","floor","StatListItem","id","percentage","item","style","backgroundColor","StatsList","items","length","statList","map","Statistics","statistics","title","FriendListItem","isOnline","statusClassName","status","online","offline","width","FriendList","friends","friendlist","TransactionTr","type","amount","currency","TransactionBody","tbody","TransactionHistory","transactions","transactionHistory","thead","App","userData","statsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9343b53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsList\":\"StatsList_statsList__2pB4Y\",\"statsItem\":\"StatsList_statsItem__2oJ-8\",\"label\":\"StatsList_label__3GfLW\",\"quantity\":\"StatsList_quantity__JDaoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3WFvN\",\"avatar\":\"Profile_avatar__2VPUn\",\"name\":\"Profile_name__1lf1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1fvMs\",\"friendFlex\":\"FriendListItem_friendFlex__oF01Q\",\"avatar\":\"FriendListItem_avatar__3YOZa\",\"name\":\"FriendListItem_name__2KBsi\",\"status\":\"FriendListItem_status__2fQaC\",\"online\":\"FriendListItem_online__3DCht\",\"offline\":\"FriendListItem_offline__3AE-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatListItem_item__teDqC\",\"percentage\":\"StatListItem_percentage__24qNW\",\"label\":\"StatListItem_label__2bJPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__ZnlpN\",\"title\":\"Statistics_title__IDS42\",\"statList\":\"Statistics_statList__1Pj6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__B_5EB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__JtsXr\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './StatsList.module.css';\r\n\r\nconst Stats = ({ followers, views, likes }) => {\r\n    return (\r\n        <ul className={s.statsList}>\r\n            <li className={s.statsItem}>\r\n                <span className={s.label}>Followers</span>\r\n                <span className={s.quantity}>{followers}</span>\r\n            </li>\r\n            <li className={s.statsItem}>\r\n                <span className={s.label}>Views</span>\r\n                <span className={s.quantity}>{views}</span>\r\n            </li>\r\n            <li className={s.statsItem}>\r\n                <span className={s.label}>Likes</span>\r\n                <span className={s.quantity}>{likes}</span>\r\n            </li>\r\n        </ul>\r\n\r\n    )\r\n};\r\n\r\n\r\nStats.propTypes = {\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default Stats;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Stats from './Stats';\r\nimport s from './Profile.module.css';\r\n\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n\r\n    return (\r\n\r\n        <div className={s.profile}>\r\n            <div className={s.description}>\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                    className={s.avatar}\r\n                />\r\n                <p className={s.name}>{name}</p>\r\n                <p className={s.tag}>@{tag}</p>\r\n                <p className={s.location}>{location}</p>\r\n            </div>\r\n            <Stats {...stats} />\r\n        </div>\r\n    )\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport s from './StatListItem.module.css';\r\n\r\nconst randomColor = () => {\r\n  const random = () => Math.floor(Math.random() * 256);\r\n\r\n  return `rgba( ${random()} , ${random()} , ${random()} )`;\r\n};\r\n\r\nconst StatListItem = ({ id, label, percentage }) => {\r\n  return (\r\n    <li className={s.item}\r\n      key={id}\r\n      style={{ backgroundColor: randomColor() }}>\r\n      <span className={s.label}>{label}</span>\r\n      <span className={s.percentage}>{percentage}%</span>\r\n    </li>\r\n  )\r\n};\r\n\r\nStatListItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default StatListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport StatListItem from './StatListItem';\r\n\r\n\r\nimport s from './Statistics.module.css';\r\n\r\n\r\nconst StatsList = ({ items }) => {\r\n  if (items.length === 0) return null;\r\n  return (\r\n    <ul className={s.statList}>\r\n      {items.map(StatListItem)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst Statistics = ({items}) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      <h2 className={s.title}>Upload stats</h2>\r\n\r\n      <StatsList items={items} />\r\n\r\n    </section>\r\n  );\r\n};\r\n\r\nStatsList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\n\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\n\r\n\r\n\r\nconst FriendListItem = ({ id, avatar, name, isOnline }) => {\r\n    const statusClassName = `${s.status} ${isOnline ? s.online : s.offline}`;\r\n    return (\r\n        <li key={id} className={s.item}>\r\n            <div className=\"friendFlex\">\r\n            <span className={statusClassName}></span>\r\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.name}>{name}</p>\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\n\r\nexport default FriendListItem;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\n\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n    if (friends.length === 0) return null;\r\n    return (\r\n        <ul className={s.friendlist}>\r\n            {friends.map(FriendListItem)}\r\n        </ul>\r\n    )\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst TransactionTr = ({ id, type, amount, currency }) => {\r\n  return (\r\n    <tr key={id}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  )\r\n};\r\n\r\nTransactionTr.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default TransactionTr;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TransactionTr from './TransactionTr';\r\n\r\nimport s from './TransactionHistory.module.css';\r\n\r\n\r\nconst TransactionBody = ({ items }) => {\r\n  if (items.length === 0) return null;\r\n  return (\r\n    <tbody className={s.tbody}>\r\n      {items.map(TransactionTr)}\r\n    </tbody>\r\n  )\r\n};\r\n\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead className={s.thead}>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <TransactionBody items={transactions} />\r\n    </table>\r\n  )\r\n};\r\n\r\nTransactionBody.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\n\r\nexport default TransactionHistory;","import React from 'react';\n\n\nimport './App.css';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport userData from './data/user.json';\nimport statsData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\n\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        name={userData.name}\n        tag={userData.tag}\n        location={userData.location}\n        avatar={userData.avatar}\n        stats={userData.stats} \n       />\n\n      <Statistics title=\"Upload stats\" items={statsData} /> \n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}